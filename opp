#!/bin/bash

# opPtimizer: optimization framework for AI   
# Copyright (c) 2019 Artur Bak

droot="."
dcfg="./opp.cfg"


if [ $# -lt 1 ]; then
    echo "Bad parameters - usage: opp <action> .."  
    exit  
fi
    
if [ -L "$0" ]; then
    BASH_PATH=`readlink $0`
else
    BASH_PATH=$0
fi
BASH_DIR=`dirname $BASH_PATH`
echo "Bash dir: $BASH_DIR"

VERSION=`cat $BASH_DIR/version.txt`
echo opPtimizer $VERSION

TEMPLATES_SRC_DIR="$BASH_DIR/templates"

GENERAL_CFG=$BASH_DIR/general.cfg
if [ -f $GENERAL_CFG ]; then
    echo Loading configuration from $GENERAL_CFG
    source $GENERAL_CFG
else
    echo WARNING: no configuration file found: $GENERAL_CFG
fi


DCFG_OPP=
if [ -f $dcfg ]; then
    echo Load user configuration from $dcfg
    source $dcfg
    # if user config file exists it will be passed to py as argument
    DCFG_OPP="dcfg=$dcfg"
else
    echo  Skipped nonexisting configuration file $dcfg
fi

#$pycmd $BASH_DIR/runscript.py

if [ "$1" == "mod" -o "$1" == "script" ]; then
   echo "Mod or script"
   if [ "$1" == "mod" ]; then
      DIR=$dmods
   elif [ "$1" == "script" ]; then
      DIR=$dscripts
   else
      echo "Internal SH error 01 (run.sh)"
   fi

   echo "Dir $DIR"

   if [ ! "$2" == "" ]; then
      if [ -d "$DIR/$2" ]; then
         #cd $DIR/$2
         $pycmd $BASH_DIR/runscript.py $DIR/$2/$2.py script=$2 $DCFG_OPP "${@:3}"
         #$pycmd "$DIR/$2/$2.py" script=$2 $DCFG_OPP "${@:3}"
         #cd $droot
      else
          echo "Error: $2 not found."
      fi
   else
      echo "Error: Exec script name must be given."
   fi
elif [ "$1" == "create" ]; then
   if [ "$2" == "mod" ]; then     
# here you can define template dir depending on module technology (cpp,py,R etc)       
      if [ "$4" == "cpp" ]; then
         TEMPLATE_DIR=$TEMPLATES_SRC_DIR/modcpp/
      else
# default technology is py
         TEMPLATE_DIR=$TEMPLATES_SRC_DIR/mod/          
      fi

#      TEMPLATE_SH=runmod.sh
      TEMPLATE_PY=mod.py
      TARGET_DIR=$dmods/$3
   elif [ "$2" == "script" ]; then
      TEMPLATE_DIR=$TEMPLATES_SRC_DIR/script/
 #     TEMPLATE_SH=runscript.sh
      TEMPLATE_PY=script.py
      TARGET_DIR=$dscripts/$3
   else
       echo "Error: no template $2 found for creation."
       exit
   fi

   echo "Creation of $TARGET_DIR from template $TEMPLATE_DIR:"
   if [ -d $TARGET_DIR ]; then
      echo "$TARGET_DIR exists. Operation skipped.."
   else
      mkdir -p $TARGET_DIR
      cp -r $TEMPLATE_DIR/* $TARGET_DIR
      mv $TARGET_DIR/$TEMPLATE_PY $TARGET_DIR/$3.py

# here you can do additionl actions on target dir depending 
# on module technology (cpp, py, R etc.)
      if [ "$2" == "mod" ]; then
        if [ "$4" == "cpp" ]; then
            mv $TARGET_DIR/mod.cpp $TARGET_DIR/$3.cpp
        fi
      fi
      echo "Done."
   fi


elif [ "$1" == "clean" ]; then
    echo Cleaning temporary files..
    rm -Rf $dout
    rm -Rf $EXT_DIR/cpp/_obj
        find . -name "*~" -exec rm {} \;
    find . -name "*pyc" -exec rm {} \;
else
  echo Undefined parameter: $1
fi

